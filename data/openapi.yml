openapi: 3.1.0

info:
  title: "%PROJECT_NAME%"
  description: "%PROJECT_DESCRIPTION%"
  version: "%PROJECT_VERSION%"

servers:
  - url: "http://%ADDRESS%"

tags:
  - name: Metadata
    description: Des requêtes qui permettent de récupérer des informations autour du serveur web (et non pas d'effectuer des actions !)
  - name: Minuteur 
    description: Des requêtent qui permettent le contrôle du buzzer, notamment afin de mettre en place des minuteurs.
  - name: Led
    description: Des requêtes qui permettent le contrôle de la LED.

paths:
  /v1/metadata:
    get:
      tags:
        - Metadata
      summary: "Récupère les métadonnées de l'ESP32."
      description: "Récupère des métadonnées (notamment uptime) de l'ESP32."
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
  /v1/sensors/photocell:
    get:
      tags:
        - Sensors
      summary: "Récupère la valeur actuelle pour le sensor photocell"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSensor"
  /v1/minuteur/activate:
    post:
      tags:
        - Minuteur
      summary: "Démarre un minuteur"
      description: "Envoie une requête pour activer le minuteur après un délai (`delay`) et pendant une durée spécifiée (`duration`)."
      parameters:
        - name: delay
          in: query
          required: true
          description: "Délai avant d'activer le buzzer (en millisecondes)."
          schema:
            type: number
        - name: duration
          in: query
          required: true
          description: "Durée pendant laquelle le buzzer sonne (en millisecondes)."
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        '400':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/minuteur/stop:
    post:
      tags:
        - Minuteur 
      summary: "Arrête le minuteur"
      description: "Cette requête arrête le minuteur immédiatement, cela inclut arrêter un buzzer planifié."
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
  /v1/led/state:
    get:
      tags:
        - Led
      summary: "Récupère le statut de la LED"
      description: "Le statut de la LED inclut savoir si elle est en mode automatique ainsi que sa luminosité actuelle."
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LedState"
  /v1/led/automatic:
    post:
      tags:
        - Led
      summary: "Active/désactive le mode automatique"
      description: "En passant en mode automatique, la LED gère sa luminosité automatiquement en fonction de la lumière ambiante"
      parameters:
        - name: enabled
          in: query
          required: true
          description: "Un booléen étant `true` si le mode automatique doit-être activé."
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        '400':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/led/luminosity:
    post:
      tags:
        - Led
      summary: "Modifie la luminosité"
      description: "Modifie la luminosité de la LED. Si la LED est déjà en mode automatique, le désactive."
      parameters:
        - name: value 
          in: query
          required: true
          description: "La luminosité entre [0..1]"
          minimum: 0
          maximum: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        '400':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/led/threshold:
    post:
      tags:
        - Led
      summary: "Modifie le seuil de luminosité de la LED"
      description: "Définit une nouvelle valeur de seuil pour ajuster la luminosité automatique."
      parameters:
        - name: value
          in: query
          required: true
          description: "Valeur du seuil entre 0 et 1."
          schema:
            type: number
            minimum: 0
            maximum: 1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        '400':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Metadata:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        uptime:
          type: number
    GenericSensor:
      type: object
      properties:
        name:
          type: string
        value:
          type: number 
    LedState:
      type: object
      properties:
        is_automatic:
          type: boolean
        luminosity:
          type: number
        threshold:
          type: number 
    Success:
      type: object
      properties:
        success:
          type: boolean 
    Error:
      type: object
      properties:
        message:
          type: string
